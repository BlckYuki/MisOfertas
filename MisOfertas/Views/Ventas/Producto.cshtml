@model CapaDTO.Producto

    @{
        ViewBag.Title = "Producto";
    }
@{ 
    var lista = new List<SelectListItem>(){
        new SelectListItem()
        {
            Text = "Perecible",
            Value = "1"
        },
        new SelectListItem()
        {
            Text = "No perecible",
            Value = "2"
        }
    };

    var listaSu = new List<SelectListItem>(){
        new SelectListItem()
        {
            Text = "Super 10",
            Value = "1"
        },
        new SelectListItem()
        {
            Text = "Acuenta",
            Value = "2"
        }
    };
}
    <h2>Producto</h2>

    @using (Html.BeginForm("Producto", "Ventas"))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Producto</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Marca, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Marca, new { htmlAttributes = new { @class = "form-control", required = "" } })
                    @Html.ValidationMessageFor(model => model.Marca, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Modelo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Modelo, new { htmlAttributes = new { @class = "form-control", required = "" } })
                    @Html.ValidationMessageFor(model => model.Modelo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control", required = "" } })
                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control", required = "" } })
                    @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control", required = "" } })
                    @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Tipo Producto", new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.DropDownList("idTipoProducto", (List<SelectListItem>)ViewBag.listaTipoProducto, "Seleccione", new { @class = "form-control"})
                    @Html.ValidationMessageFor(model => model.TipoProducto.IdTipoProducto, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.Label("Sucursal", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("idSucursal", (List<SelectListItem>)ViewBag.listaSucursal, "Seleccione", new { @class = "form-control", required = "" })
                    @Html.ValidationMessageFor(model => model.Sucursal.IdSucursal, "", new { @class = "text-danger" })
                </div>
            </div>

                     

            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Guardar" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
